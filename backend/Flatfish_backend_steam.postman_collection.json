{
	"info": {
		"_postman_id": "84dddfa9-e90b-4247-84c1-dcd45de14a83",
		"name": "Flatfish_backend_steam",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get_price_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af99b407-d920-4335-b244-8cde97dac919",
						"exec": [
							"const jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"API call successfull\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Makes sure body contains currency property\", function(){",
							"    pm.expect(jsonData).to.have.property('currency');",
							"});",
							"",
							"pm.test(\"Makes sure body contains initial property\", function(){",
							"    pm.expect(jsonData).to.have.property('initial');",
							"});",
							"",
							"pm.test(\"Makes sure body contains final property\", function(){",
							"    pm.expect(jsonData).to.have.property('final');",
							"});",
							"",
							"pm.test(\"Makes sure body contains discount_percent propert\", function(){",
							"    pm.expect(jsonData).to.have.property('discount_percent');",
							"});",
							"",
							"pm.test(\"Makes sure body consists of exactly 4 properties\", function(){",
							"    pm.expect(jsonData).to.have.length(4);",
							"});",
							"",
							"//Test for game with filterValue = 57690",
							"pm.test(\"Correct currency format\", function () {",
							"    pm.expect(jsonData.currency).to.eql('EUR'); //this specific test",
							"    pm.expect(jsonData.currency).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Correct initial price format\", function () {",
							"    pm.expect(jsonData.initial).to.eql(1499); //this specific test",
							"    pm.expect(jsonData.initial).to.be.a('number');",
							"    pm.expect(jsonData.initial).to.be.at.least(0);",
							"});",
							"",
							"pm.test(\"Correct final price format\", function () {",
							"    pm.expect(jsonData.final).to.eql(1499); //this specific test",
							"    pm.expect(jsonData.final).to.be.a('number');",
							"    pm.expect(jsonData.final).to.be.at.least(0);",
							"});",
							"",
							"pm.test(\"Correct discount_percent format\", function () {",
							"    pm.expect(jsonData.discount_percent).to.eql(0); //this specific test",
							"    pm.expect(jsonData.discount_percent).to.be.a('number');",
							"    pm.expect(jsonData.discount_percent).to.be.at.most(100);",
							"    pm.expect(jsonData.discount_percent).to.be.at.least(0);",
							"});",
							"",
							"",
							"          ",
							"          ",
							"    ",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/steam/filters?assetType=price&filterType=app_id&filterValue=57690",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"steam",
						"filters"
					],
					"query": [
						{
							"key": "assetType",
							"value": "price"
						},
						{
							"key": "filterType",
							"value": "app_id"
						},
						{
							"key": "filterValue",
							"value": "57690"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_price_info_nofilter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a456f592-3388-4f7e-83b3-02be029e74b2",
						"exec": [
							"",
							"pm.test(\"API call unsuccessfull \", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"pm.test(\"Unsuccessful API response body\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Internal Server Error\");",
							"});",
							"          ",
							"          ",
							"    ",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/steam/filters?assetType=price&filterType=app_id&filterValue=",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"steam",
						"filters"
					],
					"query": [
						{
							"key": "assetType",
							"value": "price"
						},
						{
							"key": "filterType",
							"value": "app_id"
						},
						{
							"key": "filterValue",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_reviews_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af99b407-d920-4335-b244-8cde97dac919",
						"exec": [
							"//const jsonData = pm.response.json();",
							"",
							"pm.test(\"API call successfull\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    if(!pm.response.text()) {",
							"        console.log(\"No review value\");",
							"    }",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							"",
							"          ",
							"          ",
							"    ",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/steam/filters?assetType=reviews&filterType=app_id&filterValue=57690",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"steam",
						"filters"
					],
					"query": [
						{
							"key": "assetType",
							"value": "reviews"
						},
						{
							"key": "filterType",
							"value": "app_id"
						},
						{
							"key": "filterValue",
							"value": "57690"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_<rename>_steam",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e06f8bf-6ee9-4099-b04d-5430cb2addc2",
						"exec": [
							"pm.test(\"API call successfull\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/api/steam/filters?assetType=reviews&filterType=app_id&filterValue=57690",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"steam",
						"filters"
					],
					"query": [
						{
							"key": "assetType",
							"value": "reviews"
						},
						{
							"key": "filterType",
							"value": "app_id"
						},
						{
							"key": "filterValue",
							"value": "57690"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_system_req",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b9395235-1aa5-4a43-9ab2-56c1800b735c",
						"exec": [
							"const jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"API call successfull\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Makes sure body contains pc_requirements property\", function(){",
							"    pm.expect(jsonData).to.have.property(\"pc_requirements\");",
							"});",
							"",
							"pm.test(\"Makes sure body contains mac_requirements\", function(){",
							"    pm.expect(jsonData).to.have.property(\"mac_requirements\");",
							"});",
							"",
							"pm.test(\"Makes sure body contains linux_requirements\", function(){",
							"    pm.expect(jsonData).to.have.property(\"linux_requirements\");",
							"});",
							"",
							"pm.test(\"pc_requirements correct sub properties\", function(){",
							"    if(jsonData.pc_requirements){",
							"        pm.expect(jsonData.pc_requirements).to.be.an('object');",
							"        pm.expect(jsonData.pc_requirements).to.have.property('minimum');",
							"        pm.expect(jsonData.pc_requirements).to.have.property('recommended');",
							"    }",
							"});",
							"",
							"pm.test(\"mac_requirements correct sub properties\", function(){",
							"    if(jsonData.mac_requirements){",
							"        pm.expect(jsonData.mac_requirements).to.be.an('object');",
							"        pm.expect(jsonData.mac_requirements).to.have.property('minimum');",
							"        pm.expect(jsonData.mac_requirements).to.have.property('recommended');    ",
							"    }",
							"});",
							"",
							"pm.test(\"linux_requirements correct sub properties\", function(){",
							"    if(jsonData.linux_requirements){ //fixa så att hanterar om de är tomma",
							"        pm.expect(jsonData.linux_requirements).to.be.an('object');",
							"        pm.expect(jsonData.linux_requirements).to.be.an('minimum');",
							"        pm.expect(jsonData.linux_requirements).to.be.an('recommended');",
							"    }",
							"})",
							"",
							"pm.test(\"pc_requirements correct sub property format\", function(){",
							"    pm.expect(jsonData.pc_requirements.minimum).to.be.a('string');",
							"    pm.expect(jsonData.pc_requirements.recommended).to.be.a('string');",
							"});",
							"",
							"pm.test(\"mac_requirements correct sub property format\", function(){",
							"    pm.expect(jsonData.mac_requirements.minimum).to.be.a('string');",
							"    pm.expect(jsonData.mac_requirements.recommended).to.be.a('string');",
							"})",
							"",
							"pm.test(\"linux_requirments sub property format\", function(){",
							"    pm.expect(jsonData.linux_requirements).to.be.empty;",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8080/api/steam/filters?assetType=system_requirements&filterType=app_id&filterValue=57690",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"steam",
						"filters"
					],
					"query": [
						{
							"key": "assetType",
							"value": "system_requirements"
						},
						{
							"key": "filterType",
							"value": "app_id"
						},
						{
							"key": "filterValue",
							"value": "57690"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_system_req_nofilter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b9395235-1aa5-4a43-9ab2-56c1800b735c",
						"exec": [
							"",
							"pm.test(\"API call unsuccessfull\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"pm.test(\"Unsuccessful API response body\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Internal Server Error\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8080/api/steam/filters?assetType=system_requirements&filterType=app_id&filterValue=",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"steam",
						"filters"
					],
					"query": [
						{
							"key": "assetType",
							"value": "system_requirements"
						},
						{
							"key": "filterType",
							"value": "app_id"
						},
						{
							"key": "filterValue",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_games_onTwitch",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	]
}